<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>aaa</title>
      <link href="/2019/05/14/aaa/"/>
      <url>/2019/05/14/aaa/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/05/14/hello-world/"/>
      <url>/2019/05/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Baz </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Foo </tag>
            
            <tag> Bar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019-03</title>
      <link href="/2019/05/13/2019-03/"/>
      <url>/2019/05/13/2019-03/</url>
      
        <content type="html"><![CDATA[<h1 id="2019-03"><a href="#2019-03" class="headerlink" title="2019-03"></a>2019-03</h1><h2 id="1-12019-3-10"><a href="#1-12019-3-10" class="headerlink" title="1.12019.3.10"></a>1.12019.3.10</h2><h3 id="1-1-1"><a href="#1-1-1" class="headerlink" title="1.1.1"></a>1.1.1</h3><h3 id="1-1-2"><a href="#1-1-2" class="headerlink" title="1.1.2"></a>1.1.2</h3><h2 id="你好啊我真的很不错啊"><a href="#你好啊我真的很不错啊" class="headerlink" title="你好啊我真的很不错啊"></a>你好啊我真的很不错啊</h2><h3 id="2-2-2"><a href="#2-2-2" class="headerlink" title="2.2.2"></a>2.2.2</h3><h4 id="4"><a href="#4" class="headerlink" title="4"></a>4</h4><h5 id="5"><a href="#5" class="headerlink" title="5"></a>5</h5><h2 id="asdasdasd"><a href="#asdasdasd" class="headerlink" title="asdasdasd"></a>asdasdasd</h2><h3 id="3-3-3"><a href="#3-3-3" class="headerlink" title="3.3.3"></a>3.3.3</h3><h3 id="3-3-3-1"><a href="#3-3-3-1" class="headerlink" title="3.3.3"></a>3.3.3</h3><h3 id="3-3-3-2"><a href="#3-3-3-2" class="headerlink" title="3.3.3"></a>3.3.3</h3><h2 id="1-12019-3-10-1"><a href="#1-12019-3-10-1" class="headerlink" title="1.12019.3.10"></a>1.12019.3.10</h2><h3 id="1-1-1-1"><a href="#1-1-1-1" class="headerlink" title="1.1.1"></a>1.1.1</h3><h3 id="1-1-2-1"><a href="#1-1-2-1" class="headerlink" title="1.1.2"></a>1.1.2</h3><h2 id="你好啊我真的很不错啊-1"><a href="#你好啊我真的很不错啊-1" class="headerlink" title="你好啊我真的很不错啊"></a>你好啊我真的很不错啊</h2><h3 id="2-2-2-1"><a href="#2-2-2-1" class="headerlink" title="2.2.2"></a>2.2.2</h3><h4 id="4-1"><a href="#4-1" class="headerlink" title="4"></a>4</h4><h5 id="5-1"><a href="#5-1" class="headerlink" title="5"></a>5</h5><h2 id="asdasdasd-1"><a href="#asdasdasd-1" class="headerlink" title="asdasdasd"></a>asdasdasd</h2><h3 id="3-3-3-3"><a href="#3-3-3-3" class="headerlink" title="3.3.3"></a>3.3.3</h3><h3 id="3-3-3-4"><a href="#3-3-3-4" class="headerlink" title="3.3.3"></a>3.3.3</h3><h3 id="3-3-3-5"><a href="#3-3-3-5" class="headerlink" title="3.3.3"></a>3.3.3</h3><h2 id="1-12019-3-10-2"><a href="#1-12019-3-10-2" class="headerlink" title="1.12019.3.10"></a>1.12019.3.10</h2><h3 id="1-1-1-2"><a href="#1-1-1-2" class="headerlink" title="1.1.1"></a>1.1.1</h3><h3 id="1-1-2-2"><a href="#1-1-2-2" class="headerlink" title="1.1.2"></a>1.1.2</h3><h2 id="你好啊我真的很不错啊-2"><a href="#你好啊我真的很不错啊-2" class="headerlink" title="你好啊我真的很不错啊"></a>你好啊我真的很不错啊</h2><h3 id="2-2-2-2"><a href="#2-2-2-2" class="headerlink" title="2.2.2"></a>2.2.2</h3><h4 id="4-2"><a href="#4-2" class="headerlink" title="4"></a>4</h4><h5 id="5-2"><a href="#5-2" class="headerlink" title="5"></a>5</h5><h2 id="asdasdasd-2"><a href="#asdasdasd-2" class="headerlink" title="asdasdasd"></a>asdasdasd</h2><h3 id="3-3-3-6"><a href="#3-3-3-6" class="headerlink" title="3.3.3"></a>3.3.3</h3><h3 id="3-3-3-7"><a href="#3-3-3-7" class="headerlink" title="3.3.3"></a>3.3.3</h3><h3 id="3-3-3-8"><a href="#3-3-3-8" class="headerlink" title="3.3.3"></a>3.3.3</h3><h2 id="asdasdasd-3"><a href="#asdasdasd-3" class="headerlink" title="asdasdasd"></a>asdasdasd</h2><h2 id="asdasdsad"><a href="#asdasdsad" class="headerlink" title="asdasdsad"></a>asdasdsad</h2><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190328213048.png" alt="asdasd"></p><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190328213048.png" alt="asdasd"> <img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190328213048.png" alt="asdasd"> <img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190328213048.png" alt="asdasd"></p><h3 id="啊实打实的"><a href="#啊实打实的" class="headerlink" title="啊实打实的"></a>啊实打实的</h3><p>在Windows中有AutoHotkey这个好东东帮我快速插入日期时间</p><p><code>21:45</code></p><p><code>#高效操作</code></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如何设置搜狗输入法插入当前时间</span><br><span class="line">搜狗输入法-&gt;偏好设置-&gt;高级-&gt;自定义短语-&gt;添加sj以及对应的时间函数</span><br><span class="line">https:<span class="comment">//jingyan.baidu.com/article/e9fb46e185e0097521f76614.html</span></span><br></pre></td></tr></table></figure><hr><h2 id="2019-3-11"><a href="#2019-3-11" class="headerlink" title="2019.3.11"></a>2019.3.11</h2><p><code>09:00</code></p><p>设置view的xib为自定义大小</p><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190322151414.png" alt="aaa"></p><p><code>16:59</code></p><p>健身回来 跟小袁聊了会儿app 设置了云效</p><p><code>21:12</code></p><p>如何让xcode 控件库回归原位</p><p>云效的 需求 任务 缺陷的概念 <img src="./1552310860074.png" alt="Alt text"> app 提示太慢了</p><h2 id="2019-3-12"><a href="#2019-3-12" class="headerlink" title="2019.3.12"></a>2019.3.12</h2><p>获取uiview的父窗口 self.view.superview</p><p>换了Appcode eap版 似乎快了一点</p><p><code>10:13</code></p><p>在iOS11 自定义titleview里有个button,点击事件不触发了.的解决办法如下： 1：在自定义titleview 里重写 intrinsicContentSize 属性，代码如下：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGSize</span> intrinsicContentSize;</span><br></pre></td></tr></table></figure><p>2：然后在 self.navigationItem.titleView = _titleView; 之前加入下面的代码：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_titleView.intrinsicContentSize = <span class="built_in">CGSizeMake</span>(<span class="number">200</span>, <span class="number">40</span>);</span><br><span class="line"><span class="built_in">CGSizeMake</span>(<span class="number">200</span>, <span class="number">40</span>); 宽高 自己根据实际情况自己设置具体值就可以了。这样titleview 里的button 应该就可以点击了。</span><br></pre></td></tr></table></figure><p><code>11:40</code></p><p>cell 要四面都有约束才能实现自动计算高度,下面的约束要把优先级变小</p><p><code>12:16</code></p><p>一直打印log</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Changing the translatesAutoresizingMaskIntoConstraints property of the contentView of a </span><br><span class="line"><span class="built_in">UITableViewCell</span> is not supported and will result <span class="keyword">in</span> undefined behavior, as <span class="keyword">this</span> property </span><br><span class="line">is managed by the owning <span class="built_in">UITableViewCell</span>. Cell: &lt;CellOfMine: <span class="number">0x7fba5306d800</span>; baseClass </span><br><span class="line">= <span class="built_in">UITableViewCell</span>; frame = (<span class="number">0</span> <span class="number">0</span>; <span class="number">320</span> <span class="number">44</span>); layer = &lt;<span class="built_in">CALayer</span>: <span class="number">0x604000621be0</span>&gt;&gt;</span><br></pre></td></tr></table></figure><p>然后 UITableView+FDTemplateLayoutCell.m文件中</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">templateCell.contentView.translatesAutoresizingMaskIntoConstraints = <span class="literal">NO</span>;</span><br><span class="line">改为<span class="literal">YES</span></span><br></pre></td></tr></table></figure><p><code>12:40</code></p><p>view添加手势与tableView冲突问题 解决方法：</p><p>首先给手势设置代理</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UITapGestureRecognizer</span> *tap = [[<span class="built_in">UITapGestureRecognizer</span> alloc] </span><br><span class="line">                               initWithTarget:<span class="keyword">self</span></span><br><span class="line">                               action:<span class="keyword">@selector</span>(respondsToTapGesture:)];</span><br><span class="line">    tap.delegate = <span class="keyword">self</span>;</span><br><span class="line">    [<span class="keyword">self</span>.view addGestureRecognizer:tap];</span><br></pre></td></tr></table></figure><p>遵守代理协议</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIGestureRecognizerDelegate</span></span><br></pre></td></tr></table></figure><p>实现代理方法</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)gestureRecognizer:(<span class="built_in">UIGestureRecognizer</span> *)gestureRecognizer</span><br><span class="line">     shouldReceiveTouch:(<span class="built_in">UITouch</span> *)touch &#123;</span><br><span class="line">    <span class="comment">// 点击的view的类名</span></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, <span class="built_in">NSStringFromClass</span>([touch.view <span class="keyword">class</span>]));</span><br><span class="line">    <span class="comment">// 点击了tableViewCell，view的类名为UITableViewCellContentView，则不接收Touch点击事件</span></span><br><span class="line">    <span class="keyword">if</span> ([<span class="built_in">NSStringFromClass</span>([touch.view <span class="keyword">class</span>]) isEqualToString:<span class="string">@"UITableViewCellContentView"</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>13:41</code></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UITableView</span> 内容上下方 莫名其妙多了两个<span class="built_in">UIView</span></span><br><span class="line">        发现是 sectionHeader和Footer</span><br><span class="line">        将高度设为<span class="number">0.00001</span>f  没有了，但是仍然无法获取到tableview的高度</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        仔细想了一下，写下拉框还是不用TableView更好</span><br><span class="line">        正准备转换思路写的时候</span><br><span class="line">        上了一下github，发现了一个非常好用的dropdownmenu</span><br></pre></td></tr></table></figure><p><code>MKDropdownMenu</code></p><p>效果非常好</p><p><code>18:47</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">生成公钥私钥</span><br><span class="line">    https://www.jianshu.com/p/32b0f8f9ca8e</span><br><span class="line"></span><br><span class="line">    出现xcode-select: error: tool <span class="string">'xcodebuild'</span> requires Xcode错误</span><br><span class="line">    https://www.jianshu.com/p/04033964f600</span><br></pre></td></tr></table></figure><p><code>19:30</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jenkins</span><br><span class="line"></span><br><span class="line">    https://www.jianshu.com/p/8b2fc2da0466</span><br><span class="line">    https://www.jianshu.com/p/7a2efc7c69fe</span><br></pre></td></tr></table></figure><h2 id="2019-3-13"><a href="#2019-3-13" class="headerlink" title="2019.3.13"></a>2019.3.13</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mac下启动和关闭jenkins的方式</span><br><span class="line">    启动</span><br><span class="line">    sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist</span><br><span class="line">    停止</span><br><span class="line">    sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist</span><br></pre></td></tr></table></figure><p><code>11:49</code></p><p>jenkins一直出现错误</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">error: No profile for team 'B3LVW43L89' matching 'zuanlikeji' found: Xcode couldn't </span><br><span class="line">find any provisioning profiles matching 'B3LVW43L89/zuanlikeji'. </span><br><span class="line">Install the profile (by dragging and dropping it onto Xcode's dock item) or select a different one in the General tab of the target editor. (in target 'zhinengshequ')</span><br></pre></td></tr></table></figure><p>放弃，搞了一晚上加一上午，太费时间，以后有机会再部署吧</p><p>找了一个动画库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JHChainableAnimations</span><br></pre></td></tr></table></figure><p>找了一个导航切换库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">KMNavigationBarTransition</span><br><span class="line">YPNavigationBarTransition</span><br></pre></td></tr></table></figure><p><code>18:19</code></p><p>git创建分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查看分支：git branch</span><br><span class="line">    创建分支：git branch &lt;name&gt;</span><br><span class="line">    切换分支：git checkout &lt;name&gt;</span><br><span class="line">    创建+切换分支：git checkout -b &lt;name&gt;</span><br><span class="line">    合并某分支到当前分支：git merge &lt;name&gt;</span><br><span class="line">    删除分支：git branch -d &lt;name&gt;</span><br></pre></td></tr></table></figure><h2 id="2019-3-14"><a href="#2019-3-14" class="headerlink" title="2019.3.14"></a>2019.3.14</h2><p><code>16:44</code></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取数组中属性的值的集合</span></span><br><span class="line">    List&lt;Student&gt; students = new ArrayList&lt;Student&gt;();</span><br><span class="line">    List&lt;String&gt; names =students.stream().map(Student::getName).collect(Collectors.toList())；</span><br></pre></td></tr></table></figure><h2 id="2019-3-22"><a href="#2019-3-22" class="headerlink" title="2019.3.22"></a>2019.3.22</h2><p><code>13:18</code></p><p>找到一个库用于写验证码</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CRBoxInputView</span><br><span class="line">https:<span class="comment">//github.com/CRAnimation/CRBoxInputView</span></span><br></pre></td></tr></table></figure><p>把示例中的相关类拉过来改一改即可</p><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190329160406.png =400x" alt></p><h2 id="2019-3-29"><a href="#2019-3-29" class="headerlink" title="2019.3.29"></a>2019.3.29</h2><p><code>16:00</code></p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在Info.plist中添加<span class="built_in">NSAppTransportSecurity</span>类型Dictionary。</span><br><span class="line">在<span class="built_in">NSAppTransportSecurity</span>下添加<span class="built_in">NSAllowsArbitraryLoads</span>类型Boolean,值设为<span class="literal">YES</span></span><br><span class="line"></span><br><span class="line">没办法的，对于iOS9 来说 只有添加ExceptionDomains 或者 Allow Arbitrary Loads </span><br><span class="line">改成<span class="literal">YES</span>这两种方法了，看了一下UC 的infoplist，他就是Allow Arbitrary Loads 设成<span class="literal">YES</span>的 </span><br><span class="line"></span><br><span class="line"><span class="built_in">NSAppTransportSecurity</span></span><br><span class="line">    <span class="built_in">NSAllowsArbitraryLoads</span> <span class="literal">YES</span></span><br><span class="line">    Allow Arbitrary Loads  <span class="literal">YES</span></span><br></pre></td></tr></table></figure><p><code>23:25</code></p><p>搜狗输入法输入时间快捷方式</p><p><code>【选项卡】→【高级】→【自定义短语设置】</code></p><p><a href="https://jingyan.baidu.com/article/e9fb46e185e0097521f76614.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/e9fb46e185e0097521f76614.html</a></p><p><code>#$fullhour:$minute</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$year        年(4位) 2006、2008</span><br><span class="line">  $year_yy    年(2位) 06、08</span><br><span class="line">  $month     月          12、8、3</span><br><span class="line">  $month_mm      月          12、08、03    //此函数在输入法3.1版之后（含）有效</span><br><span class="line">  $day     日          3、13、22</span><br><span class="line">  $day_dd    日         03、13、22    //此函数在输入法3.1版之后（含）有效</span><br><span class="line">  $weekday 星期        0、1、2、5、6</span><br><span class="line">  $fullhour    时(24小时制)      02、08、13、23</span><br><span class="line">  $halfhour    时(12小时制)    02、08、01、11</span><br><span class="line">  $ampm        AM、PM(英)    AM、PM（大写）</span><br><span class="line">  $minute      分          02、08、15、28</span><br><span class="line">  $second      秒          02、08、15、28</span><br><span class="line">  $year_cn 年(中文4位)    二〇〇六</span><br><span class="line">  $year_yy_cn    年(中文2位)    〇六</span><br><span class="line">  $month_cn    月(中文)    十二、八、三</span><br><span class="line">  $day_cn      日(中文)    三、十三、二十二</span><br><span class="line">  $weekday_cn 星期(中文)    日、一、二、五、六</span><br><span class="line">  $fullhour_cn    时(中文24时制)    二、八、十三、二十三</span><br><span class="line">  $halfhour_cn    时(中文12时制)    二、八、一、十一</span><br><span class="line">  $ampm_cn 上午下午(中文)    上午、下午</span><br><span class="line">  $minute_cn    分(中文)    零二、零八、十五、二十八</span><br><span class="line">  $second_cn    秒(中文)    零二、零八、十五、二十八</span><br></pre></td></tr></table></figure><h2 id="2019-3-30"><a href="#2019-3-30" class="headerlink" title="2019.3.30"></a>2019.3.30</h2><p><code>11:41</code></p><p>Pytorch</p><p><code>CrossEntropyLoss</code></p><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190330114054.png" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">loss = nn.CrossEntropyLoss()</span><br><span class="line">input = torch.randn(<span class="number">1</span>, <span class="number">5</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">target = torch.empty(<span class="number">1</span>, dtype=torch.long).random_(<span class="number">5</span>)</span><br><span class="line">output = loss(input, target)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"输入为5类:"</span>)</span><br><span class="line">print(input)</span><br><span class="line">print(<span class="string">"要计算loss的类别:"</span>)</span><br><span class="line">print(target)</span><br><span class="line">print(<span class="string">"计算loss的结果:"</span>)</span><br><span class="line">print(output)</span><br><span class="line"></span><br><span class="line">first = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>):</span><br><span class="line">    first -= input[i][target[i]]</span><br><span class="line">second = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        second += math.exp(input[i][j])</span><br><span class="line">res = <span class="number">0</span></span><br><span class="line">res += first +math.log(second)</span><br><span class="line">print(<span class="string">"自己的计算结果："</span>)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p><code>13:41</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">取max函数的意义在于</span><br><span class="line"></span><br><span class="line">tensor.data.max(<span class="number">1</span>，keepDim=<span class="literal">True</span>) 按行取最大</span><br><span class="line">    把每行最大的取出来</span><br><span class="line">    返回结果为<span class="number">2</span>个tensor的数组，第一个包含最大值，第二个包含最大的列</span><br><span class="line">     (tensor([[<span class="number">-0.0489</span>,  <span class="number">2.2643</span>,  <span class="number">0.3407</span>,  <span class="number">0.1646</span>, <span class="number">-1.0342</span>]]), tensor([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]]))</span><br><span class="line">tensor.data.max(<span class="number">0</span>,keepDim=<span class="literal">True</span>)</span><br><span class="line">     把每列最大的取出来</span><br><span class="line">    返回结果为<span class="number">2</span>个tensor的数组，第一个包含最大值，第二个包含最大的列</span><br><span class="line">keepdim: 是否保持shape</span><br><span class="line">    <span class="literal">True</span>时返回的结果是</span><br><span class="line">        (tensor([[<span class="number">-0.0489</span>,  <span class="number">2.2643</span>,  <span class="number">0.3407</span>,  <span class="number">0.1646</span>, <span class="number">-1.0342</span>]]), tensor([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]]))</span><br><span class="line">    <span class="literal">False</span>时返回的结果是</span><br><span class="line">        (tensor([<span class="number">-0.0655</span>,  <span class="number">1.1594</span>,  <span class="number">1.0679</span>, <span class="number">-0.5998</span>,  <span class="number">1.1038</span>]), tensor([<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">input = torch.randn(<span class="number">3</span>, <span class="number">5</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#tensor([[-0.6414, -0.3635, -0.0846, -0.0185,  1.2282],</span></span><br><span class="line"><span class="comment">#       [ 0.3384, -0.0484, -0.7567,  0.7989,  0.3538],</span></span><br><span class="line"><span class="comment">#        [ 0.6982, -0.6089, -0.4758,  0.2224, -0.2662]], requires_grad=True)</span></span><br><span class="line"></span><br><span class="line">取max函数</span><br><span class="line"></span><br><span class="line">print(input.data.max(<span class="number">1</span>, keepdim=<span class="literal">True</span>))</span><br><span class="line"><span class="comment">#tensor([[1.2282],</span></span><br><span class="line"><span class="comment">#        [0.7989],</span></span><br><span class="line"><span class="comment">#        [0.6982]]), tensor([[4],</span></span><br><span class="line"><span class="comment">#        [3],</span></span><br><span class="line"><span class="comment">#        [0]])</span></span><br></pre></td></tr></table></figure><h2 id="2019-3-31"><a href="#2019-3-31" class="headerlink" title="2019.3.31"></a>2019.3.31</h2><p><code>8:09</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">numpy.all</span><br><span class="line"><span class="comment">#判断是否所有元素是否都为True,一般用于判断两个数组是否全相等</span></span><br><span class="line">numpy.any</span><br><span class="line"><span class="comment">#判断是否有一个元素为True,一般用于两个数组中是否至少有一个元素相等</span></span><br></pre></td></tr></table></figure><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190331081217.png" alt></p><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190331081447.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nn.Conv2d(3, 32, kernel_size=4, stride=1, padding=2)</span><br><span class="line"># 3代表in_channels 表示图片的颜色通道</span><br><span class="line"># 32 代表out_channels 表示卷积核的数量</span><br><span class="line"># ( input_size + 2*padding - kernel_size ) / stride+1 = output_size</span><br><span class="line"># 输入(bs,3,61,241) 则输出为 (bs,32,61,241)</span><br><span class="line"></span><br><span class="line">文档上是这样说的，注意分子向上取整，除的时候向下取整</span><br><span class="line">dilation 一般为1,所以跟上面的公式基本保持一致</span><br><span class="line"></span><br><span class="line">Hout = ⌊(Hin + 2 ×  padding[0] −  dilation[0] × ( kernelsize[0] − 1) − 1)/( stride[0]) + 1⌋</span><br><span class="line">Wout = ⌊(Win + 2 ×  padding[1] −  dilation[1] × ( kernelsize[1] − 1) − 1)/( stride[1]) + 1⌋</span><br></pre></td></tr></table></figure><p><code>Pytorch model.train model.eval</code></p><p>主要是针对model 在训练时和评价时不同的 Batch Normalization 和 Dropout 方法模式。 eval（）时，pytorch会自动把BN和DropOut固定住，不会取平均，而是用训练好的值。</p><p>不然的话，一旦test的batch_size过小，很容易就会被BN层导致生成图片颜色失真极大。</p>]]></content>
      
      
      <categories>
          
          <category> Baz </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Foo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
