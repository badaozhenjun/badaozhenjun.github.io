<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>每日一记-星期一</title>
      <link href="/posts/49ae5eb5/"/>
      <url>/posts/49ae5eb5/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> get√ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>xss的攻击和防御</title>
      <link href="/posts/633fb4f6/"/>
      <url>/posts/633fb4f6/</url>
      
        <content type="html"><![CDATA[<h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2><p>不再多说</p><h2 id="防御"><a class="markdownIt-Anchor" href="#防御"></a> 防御</h2><p>xss的防御主要</p>]]></content>
      
      
      <categories>
          
          <category> get√ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>安全学习资源</title>
      <link href="/posts/4b2524a1/"/>
      <url>/posts/4b2524a1/</url>
      
        <content type="html"><![CDATA[<p><a href="https://yangyangwithgnu.github.io/" target="_blank" rel="noopener">yangyangwithgnu</a> - 文章思路很清晰</p><p><a href="https://www.leavesongs.com/" target="_blank" rel="noopener">离别歌</a> - p神博客，代码审计大神</p><p><a href="https://www.sec-wiki.com/" target="_blank" rel="noopener">sec-wiki</a> - 安全综合网站</p>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker+PhpStorm远程调试php</title>
      <link href="/posts/2077109e/"/>
      <url>/posts/2077109e/</url>
      
        <content type="html"><![CDATA[<h2 id="本文章组织架构"><a class="markdownIt-Anchor" href="#本文章组织架构"></a> 本文章组织架构:</h2><p>host&gt;vbox-ubuntu&gt;docker<br><em>docker是跑在虚拟机中的</em></p><p>host:10.10.44.197<br>ubuntu:10.10.44.219</p><h2 id="先把ssh的端口22暴露出来"><a class="markdownIt-Anchor" href="#先把ssh的端口22暴露出来"></a> 先把ssh的端口22暴露出来</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">version: &apos;2&apos;</span><br><span class="line">services:</span><br><span class="line">  discuz:</span><br><span class="line">    image: vulhub/discuz:7.2</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8080:80&quot;</span><br><span class="line">      - &quot;22:22&quot;</span><br><span class="line">  db:</span><br><span class="line">    image: mysql:5.5</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: root</span><br><span class="line">      MYSQL_DATABASE: discuz</span><br></pre></td></tr></table></figure><h2 id="apt-update"><a class="markdownIt-Anchor" href="#apt-update"></a> apt update</h2><h3 id="首先应该更新源因为系统中没有vim和vi所以采用下面的方式来更新"><a class="markdownIt-Anchor" href="#首先应该更新源因为系统中没有vim和vi所以采用下面的方式来更新"></a> 首先应该更新源，因为系统中没有vim和vi，所以采用下面的方式来更新</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv /etc/apt/sources.list /etc/apt/sources.list.bak    </span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br></pre></td></tr></table></figure><h3 id="然后apt-update会出现没有公钥的情况"><a class="markdownIt-Anchor" href="#然后apt-update会出现没有公钥的情况"></a> 然后apt update,会出现没有公钥的情况</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">W: GPG error: http://mirrors.aliyun.com trusty-security InRelease: The following signatures couldn&apos;t be verified because the public key is not available: NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</span><br></pre></td></tr></table></figure><p>我们需要先在公钥服务器中获取公钥，缺几个获取几个</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32 40976EAF437D05B5</span><br></pre></td></tr></table></figure><p>公钥服务器还有其他的，我这里用的Ubuntu的</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keyserver.ubuntu.com</span><br><span class="line">pgp.mit.edu</span><br><span class="line">subkeys.pgp.net</span><br><span class="line">www.gpg-keyserver.de</span><br></pre></td></tr></table></figure><p>然后apt update 即可 update成功</p><h2 id="安装ssh"><a class="markdownIt-Anchor" href="#安装ssh"></a> 安装ssh</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install openssh-server</span><br><span class="line">apt install vim  </span><br><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>进行如下修改</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#PermitRootLogin without-password</span><br><span class="line">PermitRootLogin yes</span><br></pre></td></tr></table></figure><p>此时可能不知道root的密码<br>可用 <code>passwd root</code>修改</p><h2 id="安装xdebug"><a class="markdownIt-Anchor" href="#安装xdebug"></a> 安装Xdebug</h2><p>对应的安装版本如下:<br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190725153708.png" alt></p><p>到这里找对应的版本进行下载</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http://pecl.php.net/package/xdebug</span><br></pre></td></tr></table></figure><p>或者先下载下来，复制进去,然后进入到所在目录</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pecl install xdebug-2.5.5.tgz</span><br></pre></td></tr></table></figure><p>配置php.ini</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /usr/local/etc/php/php.ini</span><br><span class="line">如果不对可以先find一下php，phpini本来是没有的</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[xdebug]</span><br><span class="line">zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20131226/xdebug.so</span><br><span class="line">xdebug.remote_enable = On</span><br><span class="line">xdebug.profiler_enable = On</span><br><span class="line">xdebug.auto_trace=On</span><br><span class="line">xdebug.profiler_enable_trigger = On</span><br><span class="line">xdebug.show_local_vars=0</span><br><span class="line">xdebug.idekey=PHPSTORM</span><br><span class="line">xdebug.remote_port=9000</span><br><span class="line">xdebug.remote_host=10.10.44.197</span><br></pre></td></tr></table></figure><p>重启一下容器使之生效，注意这里需要再次启动ssh</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service ssh start</span><br></pre></td></tr></table></figure><h2 id="设置-phpstorm"><a class="markdownIt-Anchor" href="#设置-phpstorm"></a> 设置 PhpStorm</h2><h3 id="加入项目"><a class="markdownIt-Anchor" href="#加入项目"></a> 加入项目</h3><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/WeChatc5c33ebb4235cc66dab25b1a244cea5e.png" alt><br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190725154342.png" alt><br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190725154607.png" alt><br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190725154633.png" alt></p><h3 id="设置远程调试"><a class="markdownIt-Anchor" href="#设置远程调试"></a> 设置远程调试</h3><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190725152549.png" alt><br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190725152745.png" alt><br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190725152806.png" alt><br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190725152839.png" alt></p><h2 id="安装chrome插件-xdebughelper"><a class="markdownIt-Anchor" href="#安装chrome插件-xdebughelper"></a> 安装chrome插件 XdebugHelper</h2><p>直接从谷歌应用市场搜即可<br>右键插件-&gt;选项，设置key<br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190725153315.png" alt></p><p>然后打开插件，打上断点即可</p><h2 id="坑一开启docker出现端口占用的情况"><a class="markdownIt-Anchor" href="#坑一开启docker出现端口占用的情况"></a> 坑一:开启docker出现端口占用的情况</h2><p>lsof -i :8080 搜不出来<br>必须得加sudo才能搜出来</p><p>搜出来是jekins，kill掉之后还会重新创建<br>必须直接关闭jekins服务</p><p>mac 启动关闭jekins</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">启动</span><br><span class="line">sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist</span><br><span class="line">关闭</span><br><span class="line">sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5学习</title>
      <link href="/posts/4509db9a/"/>
      <url>/posts/4509db9a/</url>
      
        <content type="html"><![CDATA[<h2 id="设置快捷键和伙伴关系"><a class="markdownIt-Anchor" href="#设置快捷键和伙伴关系"></a> 设置快捷键和伙伴关系</h2><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190531113852.gif" alt></p><h2 id="设置tab顺序"><a class="markdownIt-Anchor" href="#设置tab顺序"></a> 设置tab顺序</h2><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190531114250.png" alt></p><p>designer中可以直接编辑action<br>右键添加工具条<br>拖动action可以放在工具条上<br>三种窗口<br>QMainWindow<br>可以包含菜单栏、工具栏、状态栏<br>QWidget<br>不确定窗口的用途，就使用QWidget<br>QDialog<br>对话窗口的基类，没有菜单栏、工具栏、状态栏</p><p>如何创建一个主窗口<br>如何让主窗口居中</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">screen = QDesktopWidget().screenGeometry()</span><br><span class="line"> s = self.geometry()</span><br></pre></td></tr></table></figure><p>退出程序</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">app = QApplication.instance()</span><br><span class="line">    app.quit()</span><br></pre></td></tr></table></figure><p>手动添加按钮和水平布局<br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190531140630.png" alt></p><p>屏幕坐标系</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">.move(<span class="number">250</span>,<span class="number">200</span>)</span><br><span class="line">.resize(<span class="number">300</span>,<span class="number">240</span>)</span><br><span class="line"><span class="comment">#窗口的坐标，工作区的大小</span></span><br><span class="line">.x() <span class="number">250</span></span><br><span class="line">.y() <span class="number">200</span></span><br><span class="line">.width() <span class="number">300</span></span><br><span class="line">.height() <span class="number">240</span></span><br><span class="line"><span class="comment">#工作区的坐标和大小</span></span><br><span class="line">geometry().x() <span class="number">250</span></span><br><span class="line">geometry().y() <span class="number">222</span></span><br><span class="line">geometry().width() <span class="number">300</span> </span><br><span class="line">geometry().height() <span class="number">240</span></span><br><span class="line"><span class="comment">#整个窗口的坐标和大小</span></span><br><span class="line">frameGeometry().x() <span class="number">250</span></span><br><span class="line">frameGeometry().y() <span class="number">200</span></span><br><span class="line">frameGeometry().width() <span class="number">300</span></span><br><span class="line">frameGeometry().height() <span class="number">262</span></span><br></pre></td></tr></table></figure><p>设置icon<br>窗口的setWindowIcon在苹果下面无效在windows下面有效<br>但是application的setWindowIcon在两边都有效</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">QApplication.instance().setWindowIcon(QIcon())</span><br><span class="line">QMainWindow.setWindowIcon(QIcon())</span><br></pre></td></tr></table></figure><p>显示控件的提示信息</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">QToolTip.setFont(QFont(<span class="string">'SanSerif'</span>,<span class="number">12</span>))</span><br><span class="line">button.setToolTip(<span class="string">'今天是&lt;b&gt;星期五&lt;b&gt;'</span>) <span class="comment">#支持富文本</span></span><br></pre></td></tr></table></figure><p>QLabel</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">label = QLabel(<span class="string">"&amp;Name"</span>,self) <span class="comment">#开启热键，热键只有windows有效</span></span><br><span class="line">label.setText(<span class="string">"这是一个文本&lt;b&gt;标签&lt;/b&gt;"</span>)</span><br><span class="line">label.setAutoFillBackground(<span class="literal">True</span>)</span><br><span class="line">palette = QPalette()</span><br><span class="line">palette.setColor(QPalette.Window,Qt.blue)</span><br><span class="line">label.setPalette(palette)</span><br><span class="line">label.setAlignment(Qt.AlignCenter)</span><br><span class="line">label.setBuddy(passwordLineEdit) <span class="comment">#设置伙伴关系</span></span><br><span class="line"><span class="comment">#设置图片</span></span><br><span class="line">label.setPixmap(QPixmap(<span class="string">"./images/python.jpg"</span>))</span><br><span class="line">label.setText(<span class="string">"&lt;a href ='http://www.baidu.com'&gt;链接&lt;/a&gt;"</span>)</span><br><span class="line">label.setOpenExternalLinks(<span class="literal">True</span>) <span class="comment">#label中的超链接是否生效</span></span><br><span class="line"></span><br><span class="line">label.ajustSize() <span class="comment"># 根据内容自适应大小</span></span><br></pre></td></tr></table></figure><p>QLineEdit</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    QLineEdit 回显模式</span></span><br><span class="line"><span class="string">    4种回显模式</span></span><br><span class="line"><span class="string">    1.Normal  输入一个显示一个</span></span><br><span class="line"><span class="string">    2.NoEcho  不显示</span></span><br><span class="line"><span class="string">    3.Password  密码</span></span><br><span class="line"><span class="string">    4.PasswordEcho  先显示然后变成*</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">    qline = QLineEdit()</span><br><span class="line">    qline.setEchoMode(QLineEdit.Normal)</span><br></pre></td></tr></table></figure><p>QLineEdit 校验器</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建三个文本框</span></span><br><span class="line">pIntLineEdit=QLineEdit()</span><br><span class="line">pDoubleLineEdit=QLineEdit()</span><br><span class="line">pValidatorLineEdit=QLineEdit()</span><br><span class="line"><span class="comment">#实例化整型验证器，并设置范围为1-99</span></span><br><span class="line">pIntvalidator=QIntValidator(self)</span><br><span class="line">pIntvalidator.setRange(<span class="number">1</span>,<span class="number">99</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#浮点型 范围 【-360,360】，精度 小数点后两位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实例化浮点验证器，设置范围-360到360</span></span><br><span class="line">pDoubleValidator=QDoubleValidator()</span><br><span class="line">pDoubleValidator.setRange(<span class="number">-360</span>,<span class="number">360</span>)</span><br><span class="line"></span><br><span class="line">pDoubleValidator.setNotation(QDoubleValidator.StandardNotation)</span><br><span class="line"><span class="comment">#设置精度小数点后两位</span></span><br><span class="line">pDoubleValidator.setDecimals(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#字母和数字</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置文本允许出现的字符内容</span></span><br><span class="line">reg=QRegExp(<span class="string">'[a-zA-Z0-9]+$'</span>)</span><br><span class="line"><span class="comment">#自定义文本验证器</span></span><br><span class="line">pValidator=QRegExpValidator(self)</span><br><span class="line"><span class="comment">#设置属性</span></span><br><span class="line">pValidator.setRegExp(reg)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置验证器</span></span><br><span class="line">pIntLineEdit.setValidator(pIntvalidator)</span><br><span class="line">pDoubleLineEdit.setValidator(pDoubleValidator)</span><br><span class="line">pValidatorLineEdit.setValidator(pValidator)</span><br></pre></td></tr></table></figure><p>LineEdit 掩码</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建4个文本框</span></span><br><span class="line">pIPlineEdit=QLineEdit()</span><br><span class="line">pMAXlineEdit=QLineEdit()</span><br><span class="line">pDatelineEdit=QLineEdit()</span><br><span class="line">pLiceseLineEdit=QLineEdit()</span><br><span class="line"></span><br><span class="line"><span class="comment">#setInputMask():设置掩码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ip地址掩码</span></span><br><span class="line">pIPlineEdit.setInputMask(<span class="string">'000.000.000.000;_'</span>)</span><br><span class="line"><span class="comment">#Mac地址掩码</span></span><br><span class="line">pMAXlineEdit.setInputMask(<span class="string">'HH:HH:HH:HH:HH:HH;_'</span>)</span><br><span class="line"><span class="comment">#日期掩码</span></span><br><span class="line">pDatelineEdit.setInputMask(<span class="string">'0000-00-00'</span>)</span><br><span class="line"><span class="comment">#许可证掩码</span></span><br><span class="line">pLiceseLineEdit.setInputMask(<span class="string">'&gt;AAAAA-AAAAA-AAAAA-AAAAA-AAAAA;#'</span>)</span><br></pre></td></tr></table></figure><p>QTextEdit</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">self.textEdit.setPlainText(<span class="string">'Hello PyQt5!\n单击按钮'</span>)</span><br><span class="line">self.textEdit.setHtml(<span class="string">"&lt;font color='red' size='6'&gt;&lt;red&gt;Hello PyQt5!\n单击按钮。&lt;/font&gt;"</span>)</span><br><span class="line">self.textEdit.toPlainText()</span><br><span class="line">self.textEdit.toHtml()</span><br></pre></td></tr></table></figure><p>QPushButton</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 自己指定调用槽的参数</span></span><br><span class="line">self.btn2.clicked.connect(<span class="keyword">lambda</span> :self.whichbtn(self.btn2))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">whichbtn</span><span class="params">(self,btn)</span>:</span></span><br><span class="line">    <span class="comment">#输出被点击的按钮</span></span><br><span class="line">    print(<span class="string">'clicked button is '</span>+btn.text())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本前面显示图片</span></span><br><span class="line">self.btn2.setIcon(QIcon(QPixmap(<span class="string">'E:\pyqt5快速开发与实战\第四章\images\python.png'</span>)))</span><br></pre></td></tr></table></figure><p>QRadioButton</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 当按钮处于一个父widget时互斥</span></span><br><span class="line">self.btn2.toggled.connect(<span class="keyword">lambda</span>: self.btnstate(self.btn2))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">btnstate</span><span class="params">(self,btn)</span>:</span></span><br><span class="line">    <span class="comment">#输出按钮1与按钮2的状态，选中还是没选中</span></span><br><span class="line">        <span class="keyword">if</span> btn.text()==<span class="string">'Button1'</span>:</span><br><span class="line">            <span class="keyword">if</span> btn.isChecked()==<span class="literal">True</span>:</span><br><span class="line">                print(btn.text()+<span class="string">"is selected"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(btn.text()+<span class="string">"is deselected"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 被选中和取消选中都会相应信号</span></span><br></pre></td></tr></table></figure><p>QCheckBox</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Qt.Checked            2组件没有被选中（默认）</span></span><br><span class="line"><span class="string">Qt.PartiallyChecked    1组件被半选中</span></span><br><span class="line"><span class="string">Qt.Unchecked        0组件被选中</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">self.checkBox3.setTristate(<span class="literal">True</span>) <span class="comment">#设置为True才会显示半选中的状态</span></span><br></pre></td></tr></table></figure><p>QCombox</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>addItem()</td><td>添加一个下拉选项</td></tr><tr><td>—</td><td>—</td></tr><tr><td>addItems()</td><td>从列表中添加下拉选项</td></tr><tr><td>Clear()</td><td>删除下拉选项集合中的所有选项</td></tr><tr><td>count()</td><td>返回下拉选项集合中的数目</td></tr><tr><td>currentText()</td><td>返回选中选项的文本</td></tr><tr><td>itemText(i)</td><td>获取索引为i的item的选项文本</td></tr><tr><td>currentIndex()</td><td>返回选中项的索引</td></tr><tr><td>setItemText(int index,text)</td><td>改变序列号为index的文本</td></tr></tbody></table><p>QComboBox类中的常用信号</p><table><thead><tr><th>信号</th><th>含义</th></tr></thead><tbody><tr><td>Activated</td><td>当用户选中一个下拉选项时发射该信号</td></tr><tr><td>—</td><td>—</td></tr><tr><td>currentIndexChanged</td><td>当下拉选项的索引发生改变时发射该信号</td></tr><tr><td>highlighted</td><td>当选中一个已经选中的下拉选项时，发射该信号</td></tr></tbody></table><p>QSPinBox<br>QSlider</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">void  setTickPosition(TickPosition position)  #设置刻度的位置，位置还决定了slider 的方向</span><br><span class="line">void  setTickInterval(int ti) #设置刻度的间隔</span><br></pre></td></tr></table></figure><p>QDialog</p><p>一共有四种对话框<br>QMessageBox，QFileDialog，QColorDialog，QFontDialog，QInputDialog</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>setWindowTitle()</td><td>设置对话框标题</td></tr><tr><td>—</td><td>—</td></tr><tr><td>setWindowModality()</td><td>设置窗口模态，取值如下</td></tr><tr><td></td><td>Qt.NonModal：非模态，可以和程序的其他窗口进行交互</td></tr><tr><td></td><td>Qt.WindowModal:窗口模态，程序在未处理玩当前对话框时，将阻止和对话框的父窗口进行交互</td></tr><tr><td></td><td>Qt.ApplicationModal：应用程序模态，阻止和任何其他窗口进行交互</td></tr></tbody></table><p>QMessageBox</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">reply = QMessageBox.information(self, <span class="string">'标题'</span>,<span class="string">'消息对话框正文'</span>,QMessageBox.Yes | QMessageBox.No,QMessageBox.Yes)</span><br><span class="line">        reply1 = QMessageBox.question(self, <span class="string">"标题"</span>, <span class="string">"提问框消息正文"</span>, QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)</span><br><span class="line">        reply2 = QMessageBox.warning(self, <span class="string">"标题"</span>, <span class="string">"警告框消息正文"</span>, QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)</span><br><span class="line">        reply3 = QMessageBox.critical(self, <span class="string">"标题"</span>, <span class="string">"严重错误对话框消息正文"</span>, QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)</span><br><span class="line">        reply4 = QMessageBox.about(self, <span class="string">"标题"</span>, <span class="string">"关于对话框消息正文"</span>)</span><br></pre></td></tr></table></figure><p>QInputDialog</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">items=(<span class="string">'C'</span>,<span class="string">'C++'</span>,<span class="string">'C#'</span>,<span class="string">'JAva'</span>,<span class="string">'Python'</span>)</span><br><span class="line">item,ok=QInputDialog.getItem(self,<span class="string">"select input dialog"</span>,<span class="string">'语言列表'</span>,items,<span class="number">0</span>,<span class="literal">False</span>)</span><br><span class="line">text,ok=QInputDialog.getText(self,<span class="string">'Text Input Dialog'</span>,<span class="string">'输入姓名：'</span>)</span><br><span class="line">num,ok=QInputDialog.getInt(self,<span class="string">'Integer input dualog'</span>,<span class="string">'输入数字'</span>)</span><br></pre></td></tr></table></figure><p>QFontDialog</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">font,ok=QFontDialog.getFont()</span><br></pre></td></tr></table></figure><p>QFileDialog</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">fname,_=QFileDialog.getOpenFileName(self,<span class="string">'Open file'</span>,<span class="string">'C:\\'</span>,<span class="string">'Image files (*.jpg *.gif *.png *.jpeg)'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取多个文件</span></span><br><span class="line"> <span class="comment">#实例化QFileDialog</span></span><br><span class="line">        dig=QFileDialog()</span><br><span class="line">        <span class="comment">#设置可以打开任何文件</span></span><br><span class="line">        dig.setFileMode(QFileDialog.AnyFile)</span><br><span class="line">        <span class="comment">#文件过滤</span></span><br><span class="line">        dig.setFilter(QDir.Files)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> dig.exec_():</span><br><span class="line">            <span class="comment">#接受选中文件的路径，默认为列表</span></span><br><span class="line">            filenames=dig.selectedFiles()</span><br><span class="line">            <span class="comment">#列表中的第一个元素即是文件路径，以只读的方式打开文件</span></span><br><span class="line">            f=open(filenames[<span class="number">0</span>],<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> f:</span><br><span class="line">                <span class="comment">#接受读取的内容，并显示到多行文本框中</span></span><br><span class="line">                data=f.read()</span><br><span class="line">                self.contents.setText(data)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python与Pycharm</title>
      <link href="/posts/6878adf7/"/>
      <url>/posts/6878adf7/</url>
      
        <content type="html"><![CDATA[<h2 id="pycharm"><a class="markdownIt-Anchor" href="#pycharm"></a> pycharm</h2><h3 id="1如何增加pycharm的提示"><a class="markdownIt-Anchor" href="#1如何增加pycharm的提示"></a> 1.如何增加Pycharm的提示</h3><ol><li>参数名增加类型</li><li>声明函数的时候指定返回类型</li><li>用注释的方式指定成员变量的类型</li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Counter</span>:</span></span><br><span class="line">    name = <span class="literal">None</span> <span class="comment">#type: list</span></span><br><span class="line">    age = <span class="number">11</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(c: Counter)</span>-&gt;Counter:</span></span><br><span class="line">    <span class="keyword">return</span> c</span><br></pre></td></tr></table></figure><h3 id="2自动import"><a class="markdownIt-Anchor" href="#2自动import"></a> 2.自动import</h3><p><a href="https://blog.csdn.net/gaopeng0071/article/details/79402399" target="_blank" rel="noopener">《关于pycharm自动导入包快捷设置》</a><br>注意是按两次1</p><h3 id="3获取对象的属性和方法"><a class="markdownIt-Anchor" href="#3获取对象的属性和方法"></a> 3.获取对象的属性和方法</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dir(Object)</span><br></pre></td></tr></table></figure><h3 id="4获取方法详情"><a class="markdownIt-Anchor" href="#4获取方法详情"></a> 4.获取方法详情</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">按ctrl把鼠标放在方法上</span><br></pre></td></tr></table></figure><h3 id="5方法详情的文档书写"><a class="markdownIt-Anchor" href="#5方法详情的文档书写"></a> 5.方法详情的文档书写</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span><span class="params">(c,callback: typing.Callable[[str, int], str])</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    原路返回</span></span><br><span class="line"><span class="string">    :param c: 原路</span></span><br><span class="line"><span class="string">    :type c: Counter</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"><span class="comment"># return类型 会自动推断</span></span><br><span class="line"><span class="comment"># callback 可以自动推断类型</span></span><br><span class="line"><span class="comment"># 匿名函数只有lamda的形式  lamda:x,y:x+y</span></span><br></pre></td></tr></table></figure><p><code>Python Debugger</code> -&gt; <code>Collect runtime information for code insight</code> 打钩<br>调试程序一遍后<br>再次在方法上插入文档就会自动导入<br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190523171651.png" alt><br><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190523171703.png" alt></p><h2 id="python"><a class="markdownIt-Anchor" href="#python"></a> python</h2><h3 id="1获取字典dict中不存在的值时出错问题"><a class="markdownIt-Anchor" href="#1获取字典dict中不存在的值时出错问题"></a> 1.获取字典dict中不存在的值时出错问题</h3> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict.get(<span class="string">"key"</span>,<span class="literal">None</span>) <span class="comment">#没有就返回None</span></span><br></pre></td></tr></table></figure><h3 id="2python中的多线程"><a class="markdownIt-Anchor" href="#2python中的多线程"></a> 2.python中的多线程</h3><p>python3线程同步，Lock、Rlock、Condition、Event、timer、local</p><p><a href="https://www.cnblogs.com/tkqasn/p/5700281.html" target="_blank" rel="noopener">《threading多线程总结》</a></p><p><a href="https://www.jianshu.com/p/191be5f10a94" target="_blank" rel="noopener">《python3线程同步，Lock、Rlock、Condition方式》</a></p><p><a href="http://www.cnblogs.com/dahuag/p/9198618.html" target="_blank" rel="noopener"> 《多线程中的 Queue队列中join()与task_done()》 </a></p><h3 id="3python中的多进程"><a class="markdownIt-Anchor" href="#3python中的多进程"></a> 3.python中的多进程</h3><p>基本和多线程差不多，但是有一个管道的概念，类似tcp那种收发信息，可以让两个进程进行通信<br><a href="https://www.cnblogs.com/kaituorensheng/p/4445418.html" target="_blank" rel="noopener">《Python多进程编程》</a></p><h3 id="4python换源"><a class="markdownIt-Anchor" href="#4python换源"></a> 4.python换源</h3><h4 id="临时使用"><a class="markdownIt-Anchor" href="#临时使用"></a> 临时使用</h4><p>可以在使用pip的时候加参数<code>-i https://pypi.tuna.tsinghua.edu.cn/simple</code></p><p>例如：<code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple gevent</code>，这样就会从清华这边的镜像去安装gevent库。</p><h4 id="永久修改"><a class="markdownIt-Anchor" href="#永久修改"></a> 永久修改</h4><p>Linux下，修改 <code>~/.pip/pip.conf</code> (没有就创建一个)， 修改 index-url至tuna，内容如下：</p> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>windows下，直接在user目录中创建一个pip目录，如：<code>C:\Users\xx\pip</code>，新建文件pip.ini，内容如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>或者直接使用命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h3 id="5pyqt5"><a class="markdownIt-Anchor" href="#5pyqt5"></a> 5.pyqt5</h3><p><a href="https://blog.csdn.net/qq_41377419/article/details/82379818" target="_blank" rel="noopener">《从零开始 使用PyQt5》</a></p><p><a href="https://blog.csdn.net/weixin_38226671/article/details/87351062" target="_blank" rel="noopener">《关于QTcreator总是卡死无响应解决办法》</a></p><p>换了个pyqt-tools的版本 终于不卡死了</p><p><a href="http://code.py40.com/pyqt5/18.html" target="_blank" rel="noopener">《pyqt教程》</a></p><p>信号可以有不同数量的参数，参数可以为任何类型。在一个类中，可以存在信号名相同，但参数不同的多个信号。这时的调用方式为在信号之后加方括号（[ ]） ,方括号内为接收到的数据类型。可以采用类型符号或该类型的英文字符串。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">blueb.clicked[bool].connect(self.setColor)</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_39607437/article/details/79213717" target="_blank" rel="noopener">《使用QTThread的正确方式》</a></p><p><a href="https://github.com/shenbo/runcat-pyqt5-win" target="_blank" rel="noopener">《系统托盘的一个例子》</a></p><h3 id="6pyinstaller"><a class="markdownIt-Anchor" href="#6pyinstaller"></a> 6.pyinstaller</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install pyinstaller</span><br><span class="line">pyinstaller -F -w myscript.py  #</span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/5d1da5b437b7" target="_blank" rel="noopener">《Python打包工具Pyinstaller实战指南》</a></p><p><a href="https://blog.csdn.net/weixin_39000819/article/details/80942423" target="_blank" rel="noopener">《pyinstaller各种参数意思》</a></p><p><a href="https://www.landui.com/help/show-3768.html" target="_blank" rel="noopener">《pyinstaller简洁教程spec》</a></p><p><a href="https://www.oschina.net/question/941819_161672" target="_blank" rel="noopener">《PyInstaller将python脚本转成exe执行档，图标更换不了！！》</a></p><p><a href="https://blog.csdn.net/La_vie_est_belle/article/details/82260339" target="_blank" rel="noopener">《Pyinstaller打包问题之解决方案汇总》</a></p><h3 id="7python中的高级函数"><a class="markdownIt-Anchor" href="#7python中的高级函数"></a> 7.python中的高级函数</h3><p>zip()<br>map()<br>filter()<br>reduce()</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>实验室如何连接M1005打印机</title>
      <link href="/posts/32c97101/"/>
      <url>/posts/32c97101/</url>
      
        <content type="html"><![CDATA[<h2 id="1-先下载驱动"><a class="markdownIt-Anchor" href="#1-先下载驱动"></a> 1. 先下载驱动</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/15KN5bs_ZHSaAudTG4jT-RQ </span><br><span class="line">提取码：x4s9</span><br></pre></td></tr></table></figure><h2 id="2-连接打印机"><a class="markdownIt-Anchor" href="#2-连接打印机"></a> 2. 连接打印机</h2><h3 id="第一步"><a class="markdownIt-Anchor" href="#第一步"></a> 第一步</h3><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190517111307.png" alt></p><h3 id="第二步"><a class="markdownIt-Anchor" href="#第二步"></a> 第二步</h3><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190517111346.png" alt></p><h3 id="第三步"><a class="markdownIt-Anchor" href="#第三步"></a> 第三步</h3><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190517111419.png" alt></p><h3 id="第四步"><a class="markdownIt-Anchor" href="#第四步"></a> 第四步</h3><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190517111444.png" alt></p><h3 id="第五步"><a class="markdownIt-Anchor" href="#第五步"></a> 第五步</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//ZSH-PC/HP LaserJet M1005</span><br></pre></td></tr></table></figure><p>虽然很老但是将就着用吧</p><p><img src="https://adddd-1251699369.cos.ap-shanghai.myqcloud.com/20190517111537.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Fastlane自动打包</title>
      <link href="/posts/19fab624/"/>
      <url>/posts/19fab624/</url>
      
        <content type="html"><![CDATA[<h1 id="fastlane-自动打包"><a class="markdownIt-Anchor" href="#fastlane-自动打包"></a> Fastlane 自动打包</h1><h2 id="fastlane的安装"><a class="markdownIt-Anchor" href="#fastlane的安装"></a> Fastlane的安装</h2><p>如果你单独安装过ruby(如果你能看得懂这句)，去掉sudo。如果使用系统自带的ruby，需要sudo权限</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[sudo] gem install fastlane</span><br></pre></td></tr></table></figure><p>初始化</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fastlane init</span><br></pre></td></tr></table></figure><p>执行完毕后会创建一个文件夹<code>fastlane</code><br>然后编辑这个文件夹中的</p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
